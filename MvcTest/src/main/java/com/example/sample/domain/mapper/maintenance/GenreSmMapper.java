package com.example.sample.domain.mapper.maintenance;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.session.RowBounds;

import com.example.sample.domain.entity.maintenance.GenreSmCriteria;
import com.example.sample.domain.entity.maintenance.GenreSmEntity;

/**
 * クラスの説明：小ジャンルマスタマッパー
 * @author kamagata
 * @since 2018/02/15
 */
@Mapper
public interface GenreSmMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GENRE_SM
	 * @mbg.generated
	 */
	long countByExample(GenreSmCriteria example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GENRE_SM
	 * @mbg.generated
	 */
	int deleteByExample(GenreSmCriteria example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GENRE_SM
	 * @mbg.generated
	 */
	@Delete({ "delete from GENRE_SM", "where GENRE_SM_CD = #{genreSmCd,jdbcType=CHAR}" })
	int deleteByPrimaryKey(String genreSmCd);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GENRE_SM
	 * @mbg.generated
	 */
	@Insert({ "insert into GENRE_SM (GENRE_SM_CD, GENRE_SM_NM, ", "DISPLAY_ORDER, GENRE_LG_CD, ",
			"GENRE_MD_CD, BIKO, DELETE_FLG, ", "INSERT_CD, INSERT_DT, ", "UPDATE_CD, UPDATE_DT)",
			"values (#{genreSmCd,jdbcType=CHAR}, #{genreSmNm,jdbcType=VARCHAR}, ",
			"#{displayOrder,jdbcType=DECIMAL}, #{genreLgCd,jdbcType=CHAR}, ",
			"#{genreMdCd,jdbcType=CHAR}, #{biko,jdbcType=VARCHAR}, #{deleteFlg,jdbcType=VARCHAR}, ",
			"#{insertCd,jdbcType=DECIMAL}, #{insertDt,jdbcType=TIMESTAMP}, ",
			"#{updateCd,jdbcType=DECIMAL}, #{updateDt,jdbcType=TIMESTAMP})" })
	int insert(GenreSmEntity record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GENRE_SM
	 * @mbg.generated
	 */
	int insertSelective(GenreSmEntity record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GENRE_SM
	 * @mbg.generated
	 */
	List<GenreSmEntity> selectByExampleWithRowbounds(GenreSmCriteria example, RowBounds rowBounds);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GENRE_SM
	 * @mbg.generated
	 */
	List<GenreSmEntity> selectByExample(GenreSmCriteria example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GENRE_SM
	 * @mbg.generated
	 */
	@Select({ "select",
			"SM.GENRE_SM_CD as SM_GENRE_SM_CD, SM.GENRE_SM_NM as SM_GENRE_SM_NM, SM.DISPLAY_ORDER as SM_DISPLAY_ORDER, ",
			"SM.GENRE_LG_CD as SM_GENRE_LG_CD, SM.GENRE_MD_CD as SM_GENRE_MD_CD, SM.BIKO as SM_BIKO, ",
			"SM.DELETE_FLG as SM_DELETE_FLG, SM.INSERT_CD as SM_INSERT_CD, SM.INSERT_DT as SM_INSERT_DT, ",
			"SM.UPDATE_CD as SM_UPDATE_CD, SM.UPDATE_DT as SM_UPDATE_DT", "from GENRE_SM SM",
			"where SM.GENRE_SM_CD = #{genreSmCd,jdbcType=CHAR}" })
	@ResultMap("com.example.sample.domain.mapper.maintenance.GenreSmMapper.BaseResultMap")
	GenreSmEntity selectByPrimaryKey(String genreSmCd);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GENRE_SM
	 * @mbg.generated
	 */
	int updateByExampleSelective(@Param("record") GenreSmEntity record, @Param("example") GenreSmCriteria example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GENRE_SM
	 * @mbg.generated
	 */
	int updateByExample(@Param("record") GenreSmEntity record, @Param("example") GenreSmCriteria example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GENRE_SM
	 * @mbg.generated
	 */
	int updateByPrimaryKeySelective(GenreSmEntity record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GENRE_SM
	 * @mbg.generated
	 */
	@Update({ "update GENRE_SM", "set GENRE_SM_NM = #{genreSmNm,jdbcType=VARCHAR},",
			"DISPLAY_ORDER = #{displayOrder,jdbcType=DECIMAL},", "GENRE_LG_CD = #{genreLgCd,jdbcType=CHAR},",
			"GENRE_MD_CD = #{genreMdCd,jdbcType=CHAR},", "BIKO = #{biko,jdbcType=VARCHAR},",
			"DELETE_FLG = #{deleteFlg,jdbcType=VARCHAR},", "INSERT_CD = #{insertCd,jdbcType=DECIMAL},",
			"INSERT_DT = #{insertDt,jdbcType=TIMESTAMP},", "UPDATE_CD = #{updateCd,jdbcType=DECIMAL},",
			"UPDATE_DT = #{updateDt,jdbcType=TIMESTAMP}", "where GENRE_SM_CD = #{genreSmCd,jdbcType=CHAR}" })
	int updateByPrimaryKey(GenreSmEntity record);

	/**
	 * メソッドの説明：小ジャンル動的検索(大ジャンル、中ジャンル含む)
	 * @author kamagata
	 * @since 2018/02/15
	 * @param criteria 検索条件
	 * @return List<GenreSmEntity> 小ジャンルエンティティのリスト
	 */
	List<GenreSmEntity> selectGenreLgMdSmByExample(GenreSmCriteria criteria);

	/**
	 * メソッドの説明：中ジャンルコード存在チェック
	 * @author kamagata
	 * @since 2018/02/15
	 * @param genreMdCd 中ジャンルコード
	 * @return True:存在する、False:存在しない
	 */
	@Select({ "select 1 from GENRE_SM where GENRE_SM_CD = #{genreSmCd" })
	boolean existsByGenreMdCd(String genreMdCd);
}